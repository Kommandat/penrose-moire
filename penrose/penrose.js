(()=>{const e=2*Math.PI,t=Math.PI,n=e=>new Point(Math.cos(e),Math.sin(e)),i=function(t,i,o){this.point=t,this.angle=i,this.length=o,this.draw=function(){const t=this.point+n(this.angle-e/3)*this.length,i=this.point+n(this.angle+e/3)*this.length,o=new Path;o.strokeColor="black",o.moveTo(t),o.lineTo(this.point),o.lineTo(i)}},o=function(t,o,s){let h;this.from=t,this.to=o,this.pattern=s,this.vector=this.to-this.from,this.length=this.vector.length,this.angle=this.vector.angle*(e/360),this.chevrons=[];let r=this.length/12,w=this.length/2-r*((this.pattern-1)/2);for(let e=0;e<this.pattern;e++)h=new Point(this.from+n(this.angle)*w),this.chevrons.push(new i(h,this.angle,8)),w+=r;this.draw=function(){const e=new Path;e.strokeColor=new Color(0,0,0,.5),e.strokeWidth=.5,e.moveTo(t),e.lineTo(o)}},s=function(e,i,h){this.sides=[e,i,h].sort(((e,t)=>e.pattern-t.pattern)),this.pattern=this.sides[2].pattern,this.draw=function(){this.sides.forEach((e=>{3!==e.pattern&&4!==e.pattern&&e.draw()}))},this.deflate=function(){const e=[];if(4===this.pattern)oneSide=this.sides[0],twoSide=this.sides[1],fourSide=this.sides[2],newOneLength=fourSide.length-oneSide.length,newFourLength=oneSide.length,newFrom=fourSide.from+n(fourSide.angle)*newFourLength,newTo=newFrom+n(twoSide.angle-t)*newOneLength,e.push(new s(new o(newTo,oneSide.from,2),new o(newFrom,newTo,1),new o(newFrom,oneSide.from,4))),e.push(new s(new o(newFrom,newTo,1),new o(oneSide.to,newTo,3),new o(newFrom,oneSide.to,2))),e.push(new s(new o(newFrom,oneSide.to,2),new o(fourSide.to,twoSide.from,4),new o(fourSide.to,newFrom,1)));else{if(3!==this.pattern)throw`Triangle has a pattern of ${this.pattern} instead of 3 or 4`;oneSide=this.sides[0],twoSide=this.sides[1],threeSide=this.sides[2],newTwoLength=threeSide.length,newFrom=threeSide.from.clone(),newTo=oneSide.from+n(oneSide.angle)*newTwoLength,e.push(new s(new o(newFrom,newTo,1),new o(newFrom,threeSide.to,2),new o(threeSide.to,newTo,3))),e.push(new s(new o(newFrom,newTo,1),new o(newTo,oneSide.from,2),new o(newFrom,oneSide.from,4)))}return e}},h=function(e,t,n){if(this.basePoint=e,this.length=t,this.pattern=n,this.triangles=[],this.pattern=3){let n,i,h=e;for(let e=0;e<10;e++){n=new Point(t,0),n.angle+=(e%2==0?18:-18)+36*e,n+=h,i=new Point(t,0),i.angle+=(e%2==0?-18:18)+36*e,i+=h;const r=new o(h,i,1),w=new o(h,n,2),a=new o(n,i,3);this.triangles.push(new s(r,w,a))}}this.draw=function(){this.triangles.forEach((e=>e.draw()))},this.deflate=function(){this.triangles=this.triangles.flatMap((e=>e.deflate()))},this.translate=function(e){this.basePoint+=e,this.triangles.forEach((t=>{t.sides=t.sides.map((t=>new o(t.from+e,t.to+e,t.pattern)))}))}};width=300,length=width*(2/3),basePoint=new Point(width/6,width*(2/3)),fixed=new h(view.center,length,3),fixed.draw(),draggable=new h(view.center+[0,100],length,3),draggable.draw()})();